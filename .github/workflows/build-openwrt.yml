name: Build OpenWrt images

on:
  repository_dispatch:
  workflow_dispatch:
  push:
    # branches:
    #   - main
    tags:
      - "v*"

jobs:
  build-openwrt-images:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Initialization environment
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          sudo apt update
          sudo apt install build-essential clang flex g++ gawk gcc-multilib gettext \
          git libncurses5-dev libssl-dev python3-distutils rsync unzip gzip zlib1g-dev \
          file wget
          # set timezoen
          sudo timedatectl set-timezone Europe/Berlin
          # preare workdir
          sudo mkdir -p /workdir
          sudo chown $USER:$GROUPS /workdir

      - name: Checkout OpenWrt
        env:
          version: v22.03.2
        run: |
          if [[ "${GITHUB_REF#refs/*/}" =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "Checkout OpenWrt version ${GITHUB_REF#refs/*/}"
            git clone --branch ${GITHUB_REF#refs/*/} https://github.com/openwrt/openwrt.git /workdir/openwrt
          else
            echo "Checkout OpenWrt version $version"
            git clone --branch $version https://github.com/openwrt/openwrt.git /workdir/openwrt
          fi

      - name: prepare OpenWrt feeds
        run: |
          /workdir/openwrt/scripts/feeds update -a
          /workdir/openwrt/scripts/feeds install -a

      - name: copy OpenWrt config
        run: |
          cp /home/runner/work/build-openwrt/build-openwrt/targets/Broadcom\ BCM2711/diffconfig /workdir/openwrt/.config
          cp -r /home/runner/work/build-openwrt/build-openwrt/files /workdir/openwrt/

      - name: prepare OpenWrt config
        working-directory: /workdir/openwrt
        run: |
          make defconfig

      - name: make download - Broadcom BCM2711
        working-directory: /workdir/openwrt
        run: |
          make -j$(nproc) download V=s

      - name: make - Broadcom BCM2711
        working-directory: /workdir/openwrt
        run: |
          make -j$(nproc) V=s

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: Pi-CM4-DUAL-ETH-MINI
          path: |
            /workdir/openwrt/bin/targets/*
            !/workdir/openwrt/bin/targets/*/*/packages/

      - name: gh release create ${GITHUB_REF#refs/*/} /workdir/openwrt/bin/targets/*
        if: startsWith(github.ref, 'refs/tags/')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create ${GITHUB_REF#refs/*/}
          gh release upload ${GITHUB_REF#refs/*/} /workdir/openwrt/bin/targets/bcm27xx/bcm2711/config.buildinfo
          gh release upload ${GITHUB_REF#refs/*/} /workdir/openwrt/bin/targets/bcm27xx/bcm2711/feeds.buildinfo
          gh release upload ${GITHUB_REF#refs/*/} /workdir/openwrt/bin/targets/bcm27xx/bcm2711/*.img.gz
          gh release upload ${GITHUB_REF#refs/*/} /workdir/openwrt/bin/targets/bcm27xx/bcm2711/*.tar.gz
          gh release upload ${GITHUB_REF#refs/*/} /workdir/openwrt/bin/targets/bcm27xx/bcm2711/*.manifest
          gh release upload ${GITHUB_REF#refs/*/} /workdir/openwrt/bin/targets/bcm27xx/bcm2711/profiles.json
          gh release upload ${GITHUB_REF#refs/*/} /workdir/openwrt/bin/targets/bcm27xx/bcm2711/sha256sums
          gh release upload ${GITHUB_REF#refs/*/} /workdir/openwrt/bin/targets/bcm27xx/bcm2711/version.buildinfo
